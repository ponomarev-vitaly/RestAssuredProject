<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ba36a011-8194-4b20-96ba-79106d1a1ec5" name="Changes" comment="I transformed validation test for GET Card by ID endpoint from into a Parameterized Test.">
      <change afterPath="$PROJECT_DIR$/src/test/java/arguments/AuthValidationArgumentsHolder.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/arguments/AuthValidationArgumentsProvider.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/GetBoardsValidationTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/GetBoardsValidationTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2QAHHx5XTRmxtgLJOK2kIhNuR1t" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.GetBoardsValidationTest">
    <configuration name="GetBoardsTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;GetBoardsTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="GetBoardsValidationTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;GetBoardsValidationTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="GetBoardsValidationTest.checkGetBoardsWIthInvalidId" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;GetBoardsValidationTest.checkGetBoardsWIthInvalidId&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="GetCardsTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;GetCardsTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="GetCardsValidationTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;GetCardsValidationTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.GetBoardsValidationTest" />
        <item itemvalue="Gradle.GetCardsValidationTest" />
        <item itemvalue="Gradle.GetCardsTest" />
        <item itemvalue="Gradle.GetBoardsTest" />
        <item itemvalue="Gradle.GetBoardsValidationTest.checkGetBoardsWIthInvalidId" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ba36a011-8194-4b20-96ba-79106d1a1ec5" name="Changes" comment="" />
      <created>1684789385325</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1684789385325</updated>
    </task>
    <task id="LOCAL-00001" summary="This is the first commit.">
      <created>1684789758272</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1684789758272</updated>
    </task>
    <task id="LOCAL-00002" summary="I added FirstClass.java">
      <created>1684790786628</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1684790786628</updated>
    </task>
    <task id="LOCAL-00003" summary="I modified the code.">
      <created>1684832538523</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1684832538523</updated>
    </task>
    <task id="LOCAL-00004" summary="I created main method and object.">
      <created>1684832766762</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1684832766762</updated>
    </task>
    <task id="LOCAL-00005" summary="I used .log() method to get log specification.">
      <created>1684833080029</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1684833080029</updated>
    </task>
    <task id="LOCAL-00006" summary="I renamed the build.gradle file by reducing .kts extension.">
      <created>1684848317933</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1684848317933</updated>
    </task>
    <task id="LOCAL-00007" summary="I checked this project for working correctly with others web-resources.">
      <created>1684848657470</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1684848657470</updated>
    </task>
    <task id="LOCAL-00008" summary="I modified the code to print the response into the console.">
      <created>1684873833546</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1684873833546</updated>
    </task>
    <task id="LOCAL-00009" summary="I added the code with the dependencies for the junit jupiter.">
      <created>1684960201381</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1684960201381</updated>
    </task>
    <task id="LOCAL-00010" summary="I deleted RestAssuredRunner class and created TrelloTest java class instead.">
      <created>1684960455812</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1684960455812</updated>
    </task>
    <task id="LOCAL-00011" summary="I added an import junit.jupiter.api.Test.">
      <created>1684961041969</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1684961041969</updated>
    </task>
    <task id="LOCAL-00012" summary="I modified the code, but still have to fix the code.">
      <created>1685047324179</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1685047324179</updated>
    </task>
    <task id="LOCAL-00013" summary="I fixed the issues and ran the test successfully.">
      <created>1685048989206</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1685048989206</updated>
    </task>
    <task id="LOCAL-00014" summary="I fixed the issues and ran the test successfully.">
      <created>1685049540995</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1685049540995</updated>
    </task>
    <task id="LOCAL-00015" summary="I renamed the TrelloTest java class into GetBoardsTest. I added .queryParams() and .pathParam() methods in it. The test passed successfully.">
      <created>1685117109767</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1685117109767</updated>
    </task>
    <task id="LOCAL-00016" summary="I added new Test method to get a specific board.">
      <created>1685118218984</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1685118218984</updated>
    </task>
    <task id="LOCAL-00017" summary="I created new method requestWithAuth() and put the .given(), .queryParams() methods in it. Run the test successfully.">
      <created>1685119563351</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1685119563351</updated>
    </task>
    <task id="LOCAL-00018" summary="I refactored the code and the test runs successfully.">
      <created>1685123729650</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1685123729650</updated>
    </task>
    <task id="LOCAL-00019" summary="I created new class GetCardsTest and added 2 new tests in it: checkGetCards() and checkGetCard(). I run tests successfully.">
      <created>1685125403933</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1685125403933</updated>
    </task>
    <task id="LOCAL-00020" summary="I modified the code.">
      <created>1685125670883</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1685125670883</updated>
    </task>
    <task id="LOCAL-00021" summary="No changes were made, checked the test, test runs OK.">
      <created>1685136074794</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1685136074794</updated>
    </task>
    <task id="LOCAL-00022" summary="No changes were made, checked the test, test runs OK.">
      <created>1685136326559</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1685136326559</updated>
    </task>
    <task id="LOCAL-00023" summary="I added .body() method to check whether the name of the card equals to the operand's name. Test runs OK.">
      <created>1685183306449</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1685183306450</updated>
    </task>
    <task id="LOCAL-00024" summary="I added new dependency JSON schema validator in the build.gradle file.">
      <created>1685184231771</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1685184231771</updated>
    </task>
    <task id="LOCAL-00025" summary="I added .queryParam() method and checked the test. The test runs successfully.">
      <created>1685184487378</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1685184487378</updated>
    </task>
    <task id="LOCAL-00026" summary="I added get_boards.json file with the JSON schema in it.">
      <created>1685187674756</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1685187674756</updated>
    </task>
    <task id="LOCAL-00027" summary="I added .body() method for the JSON validation.">
      <created>1685187799289</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1685187799289</updated>
    </task>
    <task id="LOCAL-00028" summary="I created Json schema validation for the board. I added the code in the get_board.json. I run the tests successfully.">
      <created>1685188322033</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1685188322033</updated>
    </task>
    <task id="LOCAL-00029" summary="No changes were made.">
      <created>1685393138228</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1685393138228</updated>
    </task>
    <task id="LOCAL-00030" summary="I checked the code and run the test successfully.">
      <created>1685394702802</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1685394702802</updated>
    </task>
    <task id="LOCAL-00031" summary="I created 2 new tests for the JSON schema validation in the GetCardsTest java class. I also added 2 JSON schemas: get_cards.json and get_card.json with the actual JSON schemas. I run the tests, all test passed.">
      <created>1685612827357</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1685612827357</updated>
    </task>
    <task id="LOCAL-00032" summary="These 2 methods checkGetCardsValidation() and checkGetCardValidation() were created for the JSON schema validation only.">
      <created>1685612909878</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1685612909878</updated>
    </task>
    <task id="LOCAL-00033" summary="I added new Java class GetBoardsValidationTest and checkGetBoardsWIthInvalidId() method to check the situation when the user enters invalid id.">
      <created>1685654042943</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1685654042943</updated>
    </task>
    <task id="LOCAL-00034" summary="I added new method checkGetBoardsWIthInvalidAuth() to check whether the key and token provided are authorized to let the user enter the board.">
      <created>1685654541051</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1685654541051</updated>
    </task>
    <task id="LOCAL-00035" summary="I added new method checkGetBoardWithAnotherUserCredentials() to check the situation when the user uses the key and token from another user. I run the code, but 2 tests failed. I'm checking the code.">
      <created>1685656211540</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1685656211540</updated>
    </task>
    <task id="LOCAL-00036" summary="I modified the code, all is working correctly.">
      <created>1685656876126</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1685656876126</updated>
    </task>
    <task id="LOCAL-00037" summary="I added new Java class GetCardsValidationTest to validate tests for GET card(s) methods.">
      <created>1685657077499</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1685657077499</updated>
    </task>
    <task id="LOCAL-00038" summary="I added three methods checkGetCardWIthInvalidId(), checkGetCardWIthInvalidAuth(), checkGetCardWithAnotherUserCredentials() and requestWithAuth(). I ran the test, all worked well.">
      <created>1685658067400</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1685658067400</updated>
    </task>
    <task id="LOCAL-00039" summary="I changed modifiers in the requestWithAuth() methods from public to private.">
      <created>1685658351995</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1685658351995</updated>
    </task>
    <task id="LOCAL-00040" summary="No changes were made, checked the tests again, tests run OK.">
      <created>1685658427909</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1685658427909</updated>
    </task>
    <task id="LOCAL-00041" summary="I created new class BaseTest and added methods requestWithAuth() and RequestWithoutAuth() in it. I refactored the code in hte other classes: GetBoardsTest and GetBoardsValidationTest.">
      <created>1685736840278</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1685736840278</updated>
    </task>
    <task id="LOCAL-00042" summary="I refactored the code and moved the hook @BeforeAll in the BaseTest Java class.">
      <created>1685737253019</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1685737253019</updated>
    </task>
    <task id="LOCAL-00043" summary="I refactored the code in the GetCardsTest and GetCardsValidationTest. I also run the code successfully.">
      <created>1685738114960</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1685738114960</updated>
    </task>
    <task id="LOCAL-00044" summary="I changed the test to ParameterizedTest and added BoardIdValidationArgumentsHolder, BoardIdValidationArgumentsProvider Java classes. Run the tests in GetBoardsValidationTest Java class successfully.">
      <created>1685745521347</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1685745521347</updated>
    </task>
    <task id="LOCAL-00045" summary="I transformed validation test for GET Card by ID endpoint from into a Parameterized Test.">
      <created>1685777405231</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1685777405231</updated>
    </task>
    <option name="localTasksCounter" value="46" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="I modified the code." />
    <MESSAGE value="No changes were made, checked the test, test runs OK." />
    <MESSAGE value="I added .body() method to check whether the name of the card equals to the operand's name. Test runs OK." />
    <MESSAGE value="I added new dependency JSON schema validator in the build.gradle file." />
    <MESSAGE value="I added .queryParam() method and checked the test. The test runs successfully." />
    <MESSAGE value="I added get_boards.json file with the JSON schema in it." />
    <MESSAGE value="I added .body() method for the JSON validation." />
    <MESSAGE value="I created Json schema validation for the board. I added the code in the get_board.json. I run the tests successfully." />
    <MESSAGE value="No changes were made." />
    <MESSAGE value="I checked the code and run the test successfully." />
    <MESSAGE value="I created 2 new tests for the JSON schema validation in the GetCardsTest java class. I also added 2 JSON schemas: get_cards.json and get_card.json with the actual JSON schemas. I run the tests, all test passed." />
    <MESSAGE value="These 2 methods checkGetCardsValidation() and checkGetCardValidation() were created for the JSON schema validation only." />
    <MESSAGE value="I added new Java class GetBoardsValidationTest and checkGetBoardsWIthInvalidId() method to check the situation when the user enters invalid id." />
    <MESSAGE value="I added new method checkGetBoardsWIthInvalidAuth() to check whether the key and token provided are authorized to let the user enter the board." />
    <MESSAGE value="I added new method checkGetBoardWithAnotherUserCredentials() to check the situation when the user uses the key and token from another user. I run the code, but 2 tests failed. I'm checking the code." />
    <MESSAGE value="I modified the code, all is working correctly." />
    <MESSAGE value="I added new Java class GetCardsValidationTest to validate tests for GET card(s) methods." />
    <MESSAGE value="I added three methods checkGetCardWIthInvalidId(), checkGetCardWIthInvalidAuth(), checkGetCardWithAnotherUserCredentials() and requestWithAuth(). I ran the test, all worked well." />
    <MESSAGE value="I changed modifiers in the requestWithAuth() methods from public to private." />
    <MESSAGE value="No changes were made, checked the tests again, tests run OK." />
    <MESSAGE value="I created new class BaseTest and added methods requestWithAuth() and RequestWithoutAuth() in it. I refactored the code in hte other classes: GetBoardsTest and GetBoardsValidationTest." />
    <MESSAGE value="I refactored the code and moved the hook @BeforeAll in the BaseTest Java class." />
    <MESSAGE value="I refactored the code in the GetCardsTest and GetCardsValidationTest. I also run the code successfully." />
    <MESSAGE value="I changed the test to ParameterizedTest and added BoardIdValidationArgumentsHolder, BoardIdValidationArgumentsProvider Java classes. Run the tests in GetBoardsValidationTest Java class successfully." />
    <MESSAGE value="I transformed validation test for GET Card by ID endpoint from into a Parameterized Test." />
    <option name="LAST_COMMIT_MESSAGE" value="I transformed validation test for GET Card by ID endpoint from into a Parameterized Test." />
  </component>
</project>